{"version":3,"file":"static/js/403.205afa86.chunk.js","mappings":"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","sources":["components/ContactForm/ContactsForm.styled.js","redux/selectors.js","components/ContactForm/ContactsForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/phoneBook/PhoneBook.styled.js","pages/phoneBook/PhoneBook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledContactsForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  border: 1px solid black;\n  padding: 10px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContactsItems = state => state.contacts.items;\nexport const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectIsAdding = state => state.contacts.isAdding;\n\n\nexport const selectFilteredContacts = createSelector(\n  [selectContactsItems, selectFilter],\n  (contacts, filterQuery) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterQuery.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { StyledContactsForm } from './ContactsForm.styled';\nimport { selectContactsItems, selectIsAdding } from 'redux/selectors';\nimport { addContactThunk } from 'redux/contactsOperation';\nimport { ColorRing } from 'react-loader-spinner';\nimport { startAddingContact } from 'redux/contactsSlice';\n\n\nexport const ContactsForm = () => {\n  const contacts = useSelector(selectContactsItems);\n  const isAdding = useSelector(selectIsAdding)\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    dispatch(startAddingContact(true))\n    const form = e.target;\n   \n    e.preventDefault();\n\n    const newContact = {\n      name: form.name.value,\n      number: form.number.value,\n    };\n\n    const normalizedName = newContact.name.toLowerCase();\n\n    if (checkDobleName(normalizedName)) {\n      dispatch(startAddingContact(false))\n      return alert(`${form.name.value} is already in contacts`);\n    }\n\n    dispatch(addContactThunk(newContact));\n\n    form.reset();\n  };\n\n  const checkDobleName = name =>\n    contacts.find(contact => contact.name.toLowerCase() === name);\n\n  return (\n    <StyledContactsForm onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label htmlFor=\"number\">Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        id=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button type=\"submit\" style={{ display: 'flex', alignItems: 'center' }}>\n        <ColorRing\n          visible={isAdding}\n          height=\"20\"\n          width=\"20\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n        Add contact\n      </button>\n    </StyledContactsForm>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\ndisplay: flex;\njustify-content: space-between;\ngap: 15px;\n\n`","import PropTypes from 'prop-types';\nimport { Wrapper } from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactThunk } from 'redux/contactsOperation';\n\nexport const ContactItem = ({ contact: { name, number, id } }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContactThunk(id));\n  };\n\n  return (\n    <Wrapper>\n      <span>\n        {name}: {number}\n      </span>\n      <button type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </Wrapper>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n};\n ","import styled from \"styled-components\";\n\nexport const StyledContactsList = styled.ul`\ndisplay: flex;\nflex-direction: column;\ngap:15px;\n`","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { StyledContactsList } from './ContactsList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilteredContacts } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContactsThunk } from 'redux/contactsOperation';\nimport { ProgressBar } from 'react-loader-spinner';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error } = useSelector(selectContacts);\n  const filteredContacts = useSelector(selectFilteredContacts);\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && !error && (\n        <ProgressBar\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"progress-bar-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"progress-bar-wrapper\"\n          borderColor=\"#F4442E\"\n          barColor=\"#51E5FF\"\n        />\n      )}\n\n      <StyledContactsList>\n        {filteredContacts.map(contact => {\n          return (\n            <li key={contact.id}>\n              <ContactItem contact={contact} />\n            </li>\n          );\n        })}\n      </StyledContactsList>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { Wrapper } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsItems, selectFilter } from 'redux/selectors';\nimport { filter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterQuery = useSelector(selectFilter);\n  const items = useSelector(selectContactsItems);\n\n  const filterHandler = e => dispatch(filter(e.target.value));\n\n  return (\n    <>\n      {items.length !== 0 ? (\n        <Wrapper>\n          <label htmlFor=\"filter\">Find contacts by name</label>\n          <input\n            type=\"text\"\n            id=\"filter\"\n            value={filterQuery}\n            onChange={filterHandler}\n          />\n        </Wrapper>\n      ) : (\n        <p>no contacts</p>\n      )}\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\nwidth: 300px;\n`","import { ContactsForm } from 'components/ContactForm/ContactsForm';\n\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport 'index.css';\nimport { Wrapper } from './PhoneBook.styled';\nimport { ToastContainer } from 'react-toastify';\n\nconst PhoneBook = () => {\n  return (\n    <Wrapper>\n      <h1>Phonebook</h1>\n      <ContactsForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n      <ToastContainer />\n    </Wrapper>\n  );\n};\n\nexport default PhoneBook;"],"names":["StyledContactsForm","styled","selectContactsItems","state","contacts","items","selectContacts","selectFilter","filter","selectIsAdding","isAdding","selectFilteredContacts","createSelector","filterQuery","contact","name","toLowerCase","includes","ContactsForm","useSelector","dispatch","useDispatch","checkDobleName","find","onSubmit","e","startAddingContact","form","target","preventDefault","newContact","value","number","normalizedName","alert","addContactThunk","reset","htmlFor","type","id","pattern","title","required","style","display","alignItems","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Wrapper","ContactItem","onClick","deleteContactThunk","StyledContactsList","ContactsList","isLoading","error","filteredContacts","useEffect","fetchContactsThunk","borderColor","barColor","map","Filter","length","onChange"],"sourceRoot":""}